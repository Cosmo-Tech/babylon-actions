name: Dataset Create Action
description: Dataset deployment
inputs:
  folder:
    description: 'Working-dir folder'
    required: true
    default: 'personal'
  type:
    description: 'Dataset Type'
    required: true
    default: ''
  name:
    description: 'Dataset Name'
    required: true
    default: ''
  platforms:
    description: 'List of platforms'
    required: true
    default: 'dev'
runs:
  using: "composite"
  steps:
    - name: Dataset deployment
      env:
        name: ${{ inputs.name }}
        type: ${{ inputs.type }}
      run: |
        IFS=',' read -ra platforms_array <<< "${{ inputs.platforms }}"
        for platform in "${platforms_array[@]}"; do
            cleaned_platform=$(echo "$platform" | sed 's/ *//g')
            if [ "$cleaned_platform" == "${{ env.PLATFORM_ID }}" ]; then
                cd ${{ inputs.folder }}
                babylon api datasets create "$name" -c ${{ env.CONTEXT_ID }} -p $cleaned_platform --type $type --output .payload/${{ env.CONTEXT_ID }}.$cleaned_platform.dataset.storage.yaml 
                dataset_id=$(babylon config get -c ${{ env.CONTEXT_ID }} -p $cleaned_platform api dataset.storage_id)
                sed -i "s/%DATASET%/$dataset_id/g" .payload/${{ env.CONTEXT_ID }}.$cleaned_platform.dataset.storage.yaml
                babylon api datasets update -c ${{ env.CONTEXT_ID }} -p $cleaned_platform --file .payload/${{ env.CONTEXT_ID }}.$cleaned_platform.dataset.storage.yaml --type $type $dataset_id
            fi
        done
      shell: bash
